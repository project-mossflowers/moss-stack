/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AppSettingsRouteImport } from './routes/_app/settings'
import { Route as AppAdminRouteImport } from './routes/_app/admin'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as AppItemsIndexRouteImport } from './routes/_app/items/index'
import { Route as AppDashboardIndexRouteImport } from './routes/_app/dashboard/index'
import { Route as AppDemoTanstackQueryRouteImport } from './routes/_app/demo.tanstack-query'

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppSettingsRoute = AppSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAdminRoute = AppAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AppRouteRoute,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppItemsIndexRoute = AppItemsIndexRouteImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDashboardIndexRoute = AppDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppDemoTanstackQueryRoute = AppDemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof authLoginRoute
  '/admin': typeof AppAdminRoute
  '/settings': typeof AppSettingsRoute
  '/': typeof AppIndexRoute
  '/demo/tanstack-query': typeof AppDemoTanstackQueryRoute
  '/dashboard': typeof AppDashboardIndexRoute
  '/items': typeof AppItemsIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof authLoginRoute
  '/admin': typeof AppAdminRoute
  '/settings': typeof AppSettingsRoute
  '/': typeof AppIndexRoute
  '/demo/tanstack-query': typeof AppDemoTanstackQueryRoute
  '/dashboard': typeof AppDashboardIndexRoute
  '/items': typeof AppItemsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/(auth)/login': typeof authLoginRoute
  '/_app/admin': typeof AppAdminRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/': typeof AppIndexRoute
  '/_app/demo/tanstack-query': typeof AppDemoTanstackQueryRoute
  '/_app/dashboard/': typeof AppDashboardIndexRoute
  '/_app/items/': typeof AppItemsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/admin'
    | '/settings'
    | '/'
    | '/demo/tanstack-query'
    | '/dashboard'
    | '/items'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/admin'
    | '/settings'
    | '/'
    | '/demo/tanstack-query'
    | '/dashboard'
    | '/items'
  id:
    | '__root__'
    | '/_app'
    | '/(auth)/login'
    | '/_app/admin'
    | '/_app/settings'
    | '/_app/'
    | '/_app/demo/tanstack-query'
    | '/_app/dashboard/'
    | '/_app/items/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  authLoginRoute: typeof authLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/admin': {
      id: '/_app/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AppAdminRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/items/': {
      id: '/_app/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof AppItemsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/dashboard/': {
      id: '/_app/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/demo/tanstack-query': {
      id: '/_app/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof AppDemoTanstackQueryRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppAdminRoute: typeof AppAdminRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppDemoTanstackQueryRoute: typeof AppDemoTanstackQueryRoute
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppItemsIndexRoute: typeof AppItemsIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAdminRoute: AppAdminRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppIndexRoute: AppIndexRoute,
  AppDemoTanstackQueryRoute: AppDemoTanstackQueryRoute,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppItemsIndexRoute: AppItemsIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  authLoginRoute: authLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
